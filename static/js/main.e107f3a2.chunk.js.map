{"version":3,"sources":["App.js","services/httpReq.js","components/UserData.js","components/User.js","components/Register.js","components/Login.js","index.js"],"names":["timeoutHandle","baseUrl","httpReq","obj","axios","post","action","then","response","data","put","UserData","_ref","u","setUser","setMessage","setMessageStatus","setTimer","react_default","a","createElement","Fragment","className","username","onClick","user","id","catch","error","value","onSubmit","e","preventDefault","loginKey","target","res","Object","objectSpread","concat","placeholder","required","password","newPassword","mes","type","window","confirm","User","resetRegister","components_UserData","Register","Login","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","toggle","setToggle","_useState5","_useState6","message","_useState7","_useState8","messageStatus","_useState9","_useState10","timeoutStart","setTimeoutStart","_useState11","_useState12","show","setShow","loginRegister","document","getElementById","classList","add","remove","timer","clearTimeout","setTimeout","components_User","components_Register","components_Login","ReactDOM","render","src_App"],"mappings":"6JAQIA,0ECLEC,EAAU,gDAyCDC,EAjCD,SAAAC,GAGZ,OADgBC,IAAMC,KAAKJ,EAAS,CAACK,OAAQ,QAASH,IAAKA,IAC5CI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QA8B5BP,EA3BA,SAAAC,GAGb,OADgBC,IAAMC,KAAKJ,EAAS,CAACK,OAAQ,SAAUH,IAAKA,IAC7CI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAwB5BP,EApBA,SAAAC,GAGb,OADgBC,IAAMC,KAAKJ,EAAS,CAACK,OAAQ,SAAUH,IAAKA,IAC7CI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAiB5BP,EAZA,SAACC,GAGd,OADgBC,IAAMM,IAAIT,EAASE,GACpBI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAS5BP,EANH,SAACC,GAGX,OADgBC,IAAMC,KAAKJ,EAAS,CAACK,OAAQ,SAAUH,IAAKA,IAC7CI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCsE5BE,EA3GE,SAAAC,GAA0D,IAAxDC,EAAwDD,EAAxDC,EAAGC,EAAqDF,EAArDE,QAASC,EAA4CH,EAA5CG,WAAYC,EAAgCJ,EAAhCI,iBAAkBC,EAAcL,EAAdK,SAkF3D,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,+BAAuBP,EAAEU,UACzBL,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYE,QArBf,WACnB,IAAMC,EAAO,CACXC,GAAIb,EAAEa,IAGRxB,EAAeuB,GAAMlB,KAAK,WACxBO,IACAE,EAAiB,WACjBD,EAAU,eACVE,EAAS,OACRU,MAAM,SAACC,GACRb,EAAWa,GACXZ,EAAiB,SACjBC,EAAS,SAQP,YAEFC,EAAAC,EAAAC,cAAA,QAAMM,GAAG,WAAWG,MAAOhB,EAAEa,GAAII,SAvFZ,SAACC,GACxBA,EAAEC,iBAEF,IAAMP,EAAO,CACXC,GAAIb,EAAEa,GACNO,SAAUpB,EAAEoB,SACZV,SAAUQ,EAAEG,OAAO,GAAGL,OAGxB3B,EAAeuB,GAAMlB,KAAK,SAAA4B,GACN,kBAARA,GACRrB,EAAQsB,OAAAC,EAAA,EAAAD,CAAA,GAAIvB,EAAL,CAAQU,SAAUY,EAAIZ,YAC7BR,EAAU,uBAAAuB,OAAwBH,EAAIZ,SAA5B,MACVP,EAAiB,WACjBC,EAAS,OAETF,EAAWoB,GACXnB,EAAiB,SACjBC,EAAS,UAsETC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOmB,YAAa1B,EAAEU,SAAWV,EAAEU,SAAW,WAAYiB,UAAQ,IAClEtB,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAA,QAAMM,GAAG,eAAeI,SArEC,SAACC,GAC5BA,EAAEC,iBAEF,IAAMP,EAAO,CACXC,GAAIb,EAAEa,GACNO,SAAUpB,EAAEoB,SACZQ,SAAUV,EAAEG,OAAO,GAAGL,MACtBa,YAAaX,EAAEG,OAAO,GAAGL,OAG3B3B,EAAeuB,GAAMlB,KAAK,SAAA4B,GACN,kBAARA,GACRpB,EAAWoB,EAAIQ,KACf3B,EAAiB,WACjBC,EAAS,OAETF,EAAWoB,GACXnB,EAAiB,SACjBC,EAAS,UAoDTC,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,eAAeK,KAAK,WAAWJ,UAAQ,IAC1DtB,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,eAAeK,KAAK,WAAWJ,UAAQ,IAC1DtB,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQI,QAtDO,SAACO,GAGpB,GAFAA,EAAEC,iBAEEa,OAAOC,QAAQ,oEAAnB,CAEA,IAAMrB,EAAO,CACXC,GAAIb,EAAEa,GACNO,SAAUpB,EAAEoB,UAGd/B,EAAYuB,GAAMlB,KAAK,SAAA4B,GACrBrB,IACAC,EAAWoB,GACXnB,EAAiB,SACjBC,EAAS,UAwCP,kBC9FO8B,EARF,SAAAnC,GAA4E,IAA1Ea,EAA0Eb,EAA1Ea,KAAMX,EAAoEF,EAApEE,QAASC,EAA2DH,EAA3DG,WAAYC,EAA+CJ,EAA/CI,iBAAkBC,EAA6BL,EAA7BK,SAAU+B,EAAmBpC,EAAnBoC,cACpE,OAAGvB,GACDuB,IACO9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAUpC,EAAGY,EAAMX,QAASA,EAASC,WAAYA,EAAYC,iBAAkBA,EAAkBC,SAAUA,KAE9G,CAACC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,QCmCM6B,EAxCE,SAAAtC,GAAuD,IAArDE,EAAqDF,EAArDE,QAASC,EAA4CH,EAA5CG,WAAYC,EAAgCJ,EAAhCI,iBAAkBC,EAAcL,EAAdK,SA2BxD,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,QAAMM,GAAG,WAAWJ,UAAU,OAAOQ,SA5BlB,SAACC,GACtBA,EAAEC,iBACF,IAAMP,EAAO,CACXF,SAAUQ,EAAEG,OAAO,GAAGL,MACtBY,SAAUV,EAAEG,OAAO,GAAGL,OAGxB3B,EAAeuB,GAAMlB,KAAK,SAAA4B,GACN,kBAARA,GACRrB,EAAQqB,GACRpB,EAAU,QAAAuB,OAASH,EAAIZ,SAAb,cACVP,EAAiB,WACjBC,EAAS,OAETF,EAAWoB,GACXnB,EAAiB,SACjBC,EAAS,QAEVU,MAAM,SAAAC,GACPb,EAAWa,GACXZ,EAAiB,SACjBC,EAAS,SAQPC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,WAAWC,UAAQ,IACtCtB,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,WAAWK,KAAK,WAAWJ,UAAQ,KAEtDtB,EAAAC,EAAAC,cAAA,6BCOO+B,EAzCD,SAAAvC,GAAuD,IAArDE,EAAqDF,EAArDE,QAASC,EAA4CH,EAA5CG,WAAYC,EAAgCJ,EAAhCI,iBAAkBC,EAAcL,EAAdK,SA4BrD,OACAC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,QAAMM,GAAG,QAAQI,SA7BC,SAACC,GACnBA,EAAEC,iBAGF,IAAMP,EAAO,CACXF,SAAUQ,EAAEG,OAAO,GAAGL,MACtBY,SAAUV,EAAEG,OAAO,GAAGL,OAGxB3B,EAAcuB,GAAMlB,KAAK,SAAA4B,GACL,kBAARA,GACRrB,EAAQqB,GACRpB,EAAU,gBAAAuB,OAAiBH,EAAIZ,WAC/BP,EAAiB,WACjBC,EAAS,OAETF,EAAWoB,GACXnB,EAAiB,SACjBC,EAAS,QAEVU,MAAM,SAACC,GACRb,EAAWa,GACXZ,EAAiB,SACjBC,EAAS,SAOTC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,WAAWC,UAAQ,IACtCtB,EAAAC,EAAAC,cAAA,SAAOmB,YAAY,WAAWK,KAAK,WAAWJ,UAAQ,KAExDtB,EAAAC,EAAAC,cAAA,0BL4CSgC,MAxEf,WAAe,IAAAC,EACWC,qBADXC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GACN5B,EADM8B,EAAA,GACAzC,EADAyC,EAAA,GAAAE,EAEeH,oBAAS,GAFxBI,EAAAtB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAA,GAENE,EAFMD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGiBP,qBAHjBQ,EAAA1B,OAAAoB,EAAA,EAAApB,CAAAyB,EAAA,GAGNE,EAHMD,EAAA,GAGG/C,EAHH+C,EAAA,GAAAE,EAI6BV,mBAAS,WAJtCW,EAAA7B,OAAAoB,EAAA,EAAApB,CAAA4B,EAAA,GAINE,EAJMD,EAAA,GAISjD,EAJTiD,EAAA,GAAAE,EAK2Bb,oBAAS,GALpCc,EAAAhC,OAAAoB,EAAA,EAAApB,CAAA+B,EAAA,GAKNE,EALMD,EAAA,GAKQE,EALRF,EAAA,GAAAG,EAMWjB,qBANXkB,EAAApC,OAAAoB,EAAA,EAAApB,CAAAmC,EAAA,GAMNE,EANMD,EAAA,GAMAE,EANAF,EAAA,GAQPG,EAAgB,SAAC5C,GACC,SAAnBA,EAAEG,OAAOL,OACV+B,GAAU,GACVgB,SAASC,eAAe,YAAYC,UAAUC,IAAI,QAClDH,SAASC,eAAe,SAASC,UAAUE,OAAO,UAElDpB,GAAU,GACVgB,SAASC,eAAe,YAAYC,UAAUE,OAAO,QACrDJ,SAASC,eAAe,SAASC,UAAUC,IAAI,UAS7C9D,EAAW,SAACgE,GAGbZ,GACDa,aAAalF,GAIfsE,GAAgB,GAChBI,EAAQ,QAGR1E,EAAgBmF,WAAW,WACzBT,IACAS,WAAW,WACTpE,EAAW,OACV,IAEHuD,GAAgB,IACfW,IAGL,OACE/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,QAAMM,GAAG,WAAWJ,UAAS,GAAAgB,OAAK4B,EAAL,KAAA5B,OAAsBmC,IAASvD,EAAAC,EAAAC,cAAA,SAAI2C,IAChE7C,EAAAC,EAAAC,cAAA,OAAKE,UAAYG,EAAuB,WAAhB,gBACpBA,GACAP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UAAQI,QAASmD,EAAe9C,OAAO,EAAMP,UAAWqC,EAAS,mBAAqB,aAAtF,SACAzC,EAAAC,EAAAC,cAAA,UAAQI,QAASmD,EAAe9C,OAAO,EAAOP,UAAYqC,EAA8B,YAArB,oBAAnE,aAKHlC,EACCP,EAAAC,EAAAC,cAACgE,EAAD,CAAM3D,KAAMA,EAAMX,QAASA,EAASC,WAAYA,EAAYC,iBAAkBA,EAAkBC,SAAUA,EAAU+B,cAxCtG,WAChBW,GAAQC,GAAU,MAyChB1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACiE,EAAD,CAAUvE,QAASA,EAASC,WAAYA,EAAYC,iBAAkBA,EAAmBC,SAAUA,IACnGC,EAAAC,EAAAC,cAACkE,EAAD,CAAOxE,QAASA,EAASC,WAAYA,EAAYC,iBAAkBA,EAAkBC,SAAUA,QMtE3GsE,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASb,SAASC,eAAe","file":"static/js/main.e107f3a2.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './App.scss'\r\nimport User from './components/User'\r\nimport Register from './components/Register'\r\nimport Login from './components/Login'\r\nimport httpReq from './services/httpReq'\r\n\r\n// Set timer variable for success/alert/error messages as global for resetting \r\nlet timeoutHandle\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState();\r\n  const [toggle, setToggle] = useState(true);\r\n  const [message, setMessage] = useState();\r\n  const [messageStatus, setMessageStatus] = useState(\"success\");\r\n  const [timeoutStart, setTimeoutStart] = useState(false);\r\n  const [show, setShow] = useState()\r\n\r\n  const loginRegister = (e) => {\r\n    if(e.target.value === \"true\"){\r\n      setToggle(true)\r\n      document.getElementById('register').classList.add('hide')\r\n      document.getElementById('login').classList.remove('hide')\r\n    } else {\r\n      setToggle(false)\r\n      document.getElementById('register').classList.remove('hide')\r\n      document.getElementById('login').classList.add('hide')\r\n    }\r\n  }\r\n\r\n  const resetRegister = () => {\r\n    if(!toggle) setToggle(true)\r\n  }\r\n\r\n  // Set timer\r\n  const setTimer = (timer) => {      \r\n\r\n    // If timer checker is set, clear it first\r\n    if(timeoutStart) {\r\n      clearTimeout(timeoutHandle)\r\n    }  \r\n\r\n    // Set timer checker as true\r\n    setTimeoutStart(true)\r\n    setShow(\"show\")\r\n      \r\n    // Remove message and reset timer checker\r\n    timeoutHandle = setTimeout(() => {\r\n      setShow()\r\n      setTimeout(() =>{\r\n        setMessage(null)\r\n      }, 51)\r\n\r\n      setTimeoutStart(false)\r\n    }, timer)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <span id=\"messages\" className={`${messageStatus} ${show}`} ><p>{message}</p></span>\r\n      <div className={!user ? \"userActions\" : \"userPage\"}>\r\n        {!user ?\r\n          <div className=\"selectors\">\r\n            <button onClick={loginRegister} value={true} className={toggle ? \"btnAction active\" : \"btnAction\"} >Login</button>\r\n            <button onClick={loginRegister} value={false} className={!toggle ? \"btnAction active\" : \"btnAction\"} >Register</button>\r\n          </div>\r\n          :\r\n          false\r\n        }\r\n        {user ?\r\n          <User user={user} setUser={setUser} setMessage={setMessage} setMessageStatus={setMessageStatus} setTimer={setTimer} resetRegister={resetRegister} />\r\n          :\r\n          <>\r\n            <Register setUser={setUser} setMessage={setMessage} setMessageStatus={setMessageStatus}  setTimer={setTimer} />\r\n            <Login setUser={setUser} setMessage={setMessage} setMessageStatus={setMessageStatus} setTimer={setTimer} />\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios'\r\n\r\n// API url\r\nconst baseUrl = \"https://login-backend-rest-api.herokuapp.com/\"\r\n\r\nconst search = (username) => {\r\n  // Get all with get\r\n  const request = axios.get(`${baseUrl}?username=${username}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst login = obj => {\r\n  // Get all with get\r\n  const request = axios.post(baseUrl, {action: 'login', obj: obj})\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst logout = obj => {\r\n  // Get all with get\r\n  const request = axios.post(baseUrl, {action: 'logout', obj: obj})\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = obj => {\r\n  // Send new object with post\r\n  const request = axios.post(baseUrl, {action: 'create', obj: obj})\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// Put requests reset the whole container object on back-end\r\n// so they dont need to be separated with identifiers\r\nconst update = (obj) => {\r\n  // send object, with target id, update requested fields with put request\r\n  const request = axios.put(baseUrl, obj)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (obj) => {\r\n  // Delete from server with id sent with delete request\r\n  const request = axios.post(baseUrl, {action: 'delete', obj: obj})\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { search, login, logout, create, update, del }","import React from 'react'\r\nimport httpReq from '../services/httpReq'\r\n\r\n\r\nconst UserData = ({u, setUser, setMessage, setMessageStatus, setTimer}) => {\r\n  const handleNameChange = (e) => {\r\n    e.preventDefault()\r\n\r\n    const user = {\r\n      id: u.id,\r\n      loginKey: u.loginKey,\r\n      username: e.target[0].value,\r\n    }\r\n\r\n    httpReq.update(user).then(res => {\r\n      if(typeof res === 'object') {\r\n        setUser({...u, username: res.username})\r\n        setMessage(`Username changed to ${res.username}!`)\r\n        setMessageStatus('success')\r\n        setTimer(2000)\r\n      } else {\r\n        setMessage(res)\r\n        setMessageStatus('alert')\r\n        setTimer(2000)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    e.preventDefault()\r\n    \r\n    const user = {\r\n      id: u.id,\r\n      loginKey: u.loginKey,\r\n      password: e.target[0].value,\r\n      newPassword: e.target[1].value,\r\n    }\r\n\r\n    httpReq.update(user).then(res => {\r\n      if(typeof res === 'object') {\r\n        setMessage(res.mes)\r\n        setMessageStatus('success')\r\n        setTimer(2000)\r\n      } else {\r\n        setMessage(res)\r\n        setMessageStatus('error')\r\n        setTimer(2000)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!window.confirm(\"Are you sure you want to delete your account? This is permanent!\")) return\r\n\r\n    const user = {\r\n      id: u.id,\r\n      loginKey: u.loginKey\r\n    }\r\n\r\n    httpReq.del(user).then(res => {\r\n      setUser()\r\n      setMessage(res)\r\n      setMessageStatus('alert')\r\n      setTimer(2000)\r\n    })\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    const user = {\r\n      id: u.id\r\n    }\r\n  \r\n    httpReq.logout(user).then(() => {\r\n      setUser()\r\n      setMessageStatus('success')\r\n      setMessage(`Logged out!`)\r\n      setTimer(2000)\r\n    }).catch((error) => {\r\n      setMessage(error)\r\n      setMessageStatus('error')\r\n      setTimer(2000)\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"logged\">\r\n        <h3>Logged in as user {u.username}</h3>\r\n        <button className=\"btnAction\" onClick={handleLogout}>log out</button>\r\n      </div>\r\n      <form id=\"editName\" value={u.id} onSubmit={handleNameChange} >\r\n        <p>Change name</p>\r\n        <input placeholder={u.username ? u.username : \"Username\"} required />\r\n        <button>Send</button>\r\n      </form>\r\n      <form id=\"editPassword\" onSubmit={handlePasswordChange} >\r\n        <p>Change password</p>\r\n        <input placeholder=\"Old Password\" type=\"password\" required />\r\n        <input placeholder=\"New Password\" type=\"password\" required />\r\n        <button>Send</button>\r\n      </form>\r\n      <div className=\"delete\">\r\n        <p>Delete user</p>\r\n        <button onClick={handleDelete}>Delete User</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserData","import React from 'react'\r\nimport UserData from './UserData'\r\n\r\nconst User = ({user, setUser, setMessage, setMessageStatus, setTimer, resetRegister}) => {\r\n  if(user) {\r\n    resetRegister()\r\n    return(<UserData u={user} setUser={setUser} setMessage={setMessage} setMessageStatus={setMessageStatus} setTimer={setTimer} />)\r\n  }\r\n  return[<></>]\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport httpReq from '../services/httpReq'\r\n\r\nconst Register = ({setUser, setMessage, setMessageStatus, setTimer}) => {\r\n  const handleRegister = (e) => {\r\n    e.preventDefault()\r\n    const user = {\r\n      username: e.target[0].value,\r\n      password: e.target[1].value\r\n    }\r\n    \r\n    httpReq.create(user).then(res => {\r\n      if(typeof res === 'object') {\r\n        setUser(res)\r\n        setMessage(`User ${res.username} created!`)\r\n        setMessageStatus('success')\r\n        setTimer(2000)\r\n      } else {\r\n        setMessage(res)\r\n        setMessageStatus('alert')\r\n        setTimer(2000)\r\n      }\r\n    }).catch(error => {\r\n      setMessage(error)\r\n      setMessageStatus('error')\r\n      setTimer(2000)\r\n    })\r\n  \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <form id=\"register\" className=\"hide\" onSubmit={handleRegister}>\r\n        <div>\r\n        <input placeholder=\"Username\" required />\r\n        <input placeholder=\"Password\" type=\"password\" required />\r\n        </div>\r\n        <button>Register</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport httpReq from '../services/httpReq'\r\n\r\nconst Login = ({setUser, setMessage, setMessageStatus, setTimer}) => {\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n  \r\n    // CHANGE TO A POST FORMAT\r\n    const user = {\r\n      username: e.target[0].value,\r\n      password: e.target[1].value\r\n    }\r\n  \r\n    httpReq.login(user).then(res => {\r\n      if(typeof res === 'object') {\r\n        setUser(res)\r\n        setMessage(`Logged in as ${res.username}`)\r\n        setMessageStatus('success')\r\n        setTimer(2000)\r\n      } else {\r\n        setMessage(res)\r\n        setMessageStatus('error')\r\n        setTimer(2000)\r\n      }\r\n    }).catch((error) => {\r\n      setMessage(error)\r\n      setMessageStatus('error')\r\n      setTimer(2000)\r\n    })\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <form id=\"login\" onSubmit={handleLogin}>\r\n      <div>\r\n        <input placeholder=\"Username\" required />\r\n        <input placeholder=\"Password\" type=\"password\" required />\r\n      </div>\r\n      <button>Login</button>\r\n    </form>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}